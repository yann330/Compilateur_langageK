Terminaux inutilisés dans la grammaire

    NOT
    MUL


État 10 conflits: 2 décalage/réduction, 1 réduction/réduction
État 27 conflits: 10 décalage/réduction
État 42 conflits: 1 décalage/réduction, 1 réduction/réduction
État 55 conflits: 10 décalage/réduction
État 56 conflits: 10 décalage/réduction
État 57 conflits: 10 décalage/réduction
État 58 conflits: 10 décalage/réduction
État 59 conflits: 10 décalage/réduction
État 60 conflits: 8 décalage/réduction
État 61 conflits: 8 décalage/réduction
État 62 conflits: 10 décalage/réduction
État 63 conflits: 10 décalage/réduction
État 64 conflits: 10 décalage/réduction
État 94 conflits: 2 décalage/réduction, 1 réduction/réduction


Grammaire

    0 $accept: programme $end

    1 $@1: %empty

    2 list: expression $@1 listBis

    3 listBis: %empty
    4        | SEPAR list

    5 listp: %empty
    6      | list

    7 listArgs: VOID
    8         | listTmp

    9 listTmp: TYPE ID
   10        | TYPE ID SEPAR listTmp

   11 listArgsDef: VOID

   12 $@2: %empty

   13 listArgsDef: $@2 listTmpDef

   14 listTmpDef: TYPE ID

   15 $@3: %empty

   16 listTmpDef: TYPE ID $@3 SEPAR listTmpDef

   17 listVars: ID listBisVars

   18 listBisVars: %empty
   19            | SEPAR listVars

   20 listVars: %empty
   21         | list

   22 listDeclarationVar: suiteFunct

   23 $@4: %empty

   24 listDeclarationVar: TYPE ID PV $@4 listDeclarationVar
   25                   | TYPE listVars PV listDeclarationVar

   26 listDecFunct: suiteMain
   27             | listDeclarationFunct listDecFunct

   28 listDeclarationFunct: TYPE ID LPAR listArgs RPAR PV

   29 suiteMain: main

   30 suiteFunct: listDecFunct

   31 instructions: %empty
   32             | TYPE listVars PV instructions

   33 $@5: %empty

   34 instructions: TYPE ID PV $@5 instructions

   35 $@6: %empty

   36 instructions: ID LPAR listp RPAR PV $@6 instructions

   37 $@7: %empty

   38 instructions: ID AFF expression PV $@7 instructions
   39             | condition
   40             | while
   41             | retour

   42 while: WHILE LPAR expression RPAR bloc instructions

   43 $@8: %empty

   44 condition: IF LPAR expression RPAR bloc $@8 instructions

   45 $@9: %empty

   46 condition: IF LPAR expression RPAR bloc $@9 ELSE bloc instructions

   47 $@10: %empty

   48 bloc: ACO $@10 instructions ACF

   49 $@11: %empty

   50 blocFunct: ACO $@11 instructions ACF

   51 retour: RETURN expression PV instructions

   52 programme: listDeclarationVar

   53 $@12: %empty

   54 $@13: %empty

   55 main: TYPE MAIN LPAR RPAR $@12 bloc $@13 fonctions

   56 fonctions: %empty

   57 $@14: %empty

   58 $@15: %empty

   59 fonctions: TYPE ID LPAR $@14 listArgsDef RPAR $@15 blocFunct fonctions

   60 expression: expression expressionBis
   61           | ENT
   62           | ID
   63           | ID LPAR listp RPAR
   64           | LPAR expression RPAR
   65           | '!' expression

   66 expressionBis: ADD expression
   67              | MOINS expression
   68              | MULT expression
   69              | EQ expression
   70              | INFS expression
   71              | INFE expression
   72              | SUPE expression
   73              | SUPS expression
   74              | ET expression
   75              | OR expression


Terminaux, suivis des règles où ils apparaissent

    $end (0) 0
    '!' (33) 65
    error (256)
    ENT <intVal> (258) 61
    ID <stringVal> (259) 9 10 14 16 17 24 28 34 36 38 59 62 63
    EQ <stringVal> (260) 69
    INFS <stringVal> (261) 70
    INFE <stringVal> (262) 71
    ET <stringVal> (263) 74
    OR <stringVal> (264) 75
    TYPE <stringVal> (265) 9 10 14 16 24 25 28 32 34 55 59
    IF <stringVal> (266) 44 46
    ELSE <stringVal> (267) 46
    WHILE <stringVal> (268) 42
    SEPAR <stringVal> (269) 4 10 16 19
    PV <stringVal> (270) 24 25 28 32 34 36 38 51
    ACF <stringVal> (271) 48 50
    ACO <stringVal> (272) 48 50
    ADD <stringVal> (273) 66
    MOINS <stringVal> (274) 67
    MULT <stringVal> (275) 68
    AFF <stringVal> (276) 38
    NOT <stringVal> (277)
    RETURN <stringVal> (278) 51
    MAIN <stringVal> (279) 55
    RPAR <stringVal> (280) 28 36 42 44 46 55 59 63 64
    LPAR <stringVal> (281) 28 36 42 44 46 55 59 63 64
    SUPS <stringVal> (282) 73
    SUPE <stringVal> (283) 72
    VOID <stringVal> (284) 7 11
    MUL (285)


Non-terminaux, suivis des règles où ils apparaissent

    $accept (32)
        à gauche: 0
    list (33)
        à gauche: 2
        à droite: 4 6 21
    $@1 (34)
        à gauche: 1
        à droite: 2
    listBis (35)
        à gauche: 3 4
        à droite: 2
    listp (36)
        à gauche: 5 6
        à droite: 36 63
    listArgs (37)
        à gauche: 7 8
        à droite: 28
    listTmp (38)
        à gauche: 9 10
        à droite: 8 10
    listArgsDef (39)
        à gauche: 11 13
        à droite: 59
    $@2 (40)
        à gauche: 12
        à droite: 13
    listTmpDef (41)
        à gauche: 14 16
        à droite: 13 16
    $@3 (42)
        à gauche: 15
        à droite: 16
    listVars (43)
        à gauche: 17 20 21
        à droite: 19 25 32
    listBisVars (44)
        à gauche: 18 19
        à droite: 17
    listDeclarationVar (45)
        à gauche: 22 24 25
        à droite: 24 25 52
    $@4 (46)
        à gauche: 23
        à droite: 24
    listDecFunct (47)
        à gauche: 26 27
        à droite: 27 30
    listDeclarationFunct (48)
        à gauche: 28
        à droite: 27
    suiteMain (49)
        à gauche: 29
        à droite: 26
    suiteFunct (50)
        à gauche: 30
        à droite: 22
    instructions (51)
        à gauche: 31 32 34 36 38 39 40 41
        à droite: 32 34 36 38 42 44 46 48 50 51
    $@5 (52)
        à gauche: 33
        à droite: 34
    $@6 (53)
        à gauche: 35
        à droite: 36
    $@7 (54)
        à gauche: 37
        à droite: 38
    while (55)
        à gauche: 42
        à droite: 40
    condition (56)
        à gauche: 44 46
        à droite: 39
    $@8 (57)
        à gauche: 43
        à droite: 44
    $@9 (58)
        à gauche: 45
        à droite: 46
    bloc (59)
        à gauche: 48
        à droite: 42 44 46 55
    $@10 (60)
        à gauche: 47
        à droite: 48
    blocFunct (61)
        à gauche: 50
        à droite: 59
    $@11 (62)
        à gauche: 49
        à droite: 50
    retour (63)
        à gauche: 51
        à droite: 41
    programme (64)
        à gauche: 52
        à droite: 0
    main (65)
        à gauche: 55
        à droite: 29
    $@12 (66)
        à gauche: 53
        à droite: 55
    $@13 (67)
        à gauche: 54
        à droite: 55
    fonctions (68)
        à gauche: 56 59
        à droite: 55 59
    $@14 (69)
        à gauche: 57
        à droite: 59
    $@15 (70)
        à gauche: 58
        à droite: 59
    expression (71)
        à gauche: 60 61 62 63 64 65
        à droite: 2 38 42 44 46 51 60 64 65 66 67 68 69 70 71 72 73 74 75
    expressionBis (72)
        à gauche: 66 67 68 69 70 71 72 73 74 75
        à droite: 60


État 0

    0 $accept: . programme $end
   22 listDeclarationVar: . suiteFunct
   24                   | . TYPE ID PV $@4 listDeclarationVar
   25                   | . TYPE listVars PV listDeclarationVar
   26 listDecFunct: . suiteMain
   27             | . listDeclarationFunct listDecFunct
   28 listDeclarationFunct: . TYPE ID LPAR listArgs RPAR PV
   29 suiteMain: . main
   30 suiteFunct: . listDecFunct
   52 programme: . listDeclarationVar
   55 main: . TYPE MAIN LPAR RPAR $@12 bloc $@13 fonctions

    TYPE  décalage et aller à l'état 1

    listDeclarationVar    aller à l'état 2
    listDecFunct          aller à l'état 3
    listDeclarationFunct  aller à l'état 4
    suiteMain             aller à l'état 5
    suiteFunct            aller à l'état 6
    programme             aller à l'état 7
    main                  aller à l'état 8


État 1

    2 list: . expression $@1 listBis
   17 listVars: . ID listBisVars
   20         | . %empty  [PV]
   21         | . list
   24 listDeclarationVar: TYPE . ID PV $@4 listDeclarationVar
   25                   | TYPE . listVars PV listDeclarationVar
   28 listDeclarationFunct: TYPE . ID LPAR listArgs RPAR PV
   55 main: TYPE . MAIN LPAR RPAR $@12 bloc $@13 fonctions
   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 10
    MAIN  décalage et aller à l'état 11
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    $défaut  réduction par utilisation de la règle 20 (listVars)

    list        aller à l'état 14
    listVars    aller à l'état 15
    expression  aller à l'état 16


État 2

   52 programme: listDeclarationVar .

    $défaut  réduction par utilisation de la règle 52 (programme)


État 3

   30 suiteFunct: listDecFunct .

    $défaut  réduction par utilisation de la règle 30 (suiteFunct)


État 4

   26 listDecFunct: . suiteMain
   27             | . listDeclarationFunct listDecFunct
   27             | listDeclarationFunct . listDecFunct
   28 listDeclarationFunct: . TYPE ID LPAR listArgs RPAR PV
   29 suiteMain: . main
   55 main: . TYPE MAIN LPAR RPAR $@12 bloc $@13 fonctions

    TYPE  décalage et aller à l'état 17

    listDecFunct          aller à l'état 18
    listDeclarationFunct  aller à l'état 4
    suiteMain             aller à l'état 5
    main                  aller à l'état 8


État 5

   26 listDecFunct: suiteMain .

    $défaut  réduction par utilisation de la règle 26 (listDecFunct)


État 6

   22 listDeclarationVar: suiteFunct .

    $défaut  réduction par utilisation de la règle 22 (listDeclarationVar)


État 7

    0 $accept: programme . $end

    $end  décalage et aller à l'état 19


État 8

   29 suiteMain: main .

    $défaut  réduction par utilisation de la règle 29 (suiteMain)


État 9

   61 expression: ENT .

    $défaut  réduction par utilisation de la règle 61 (expression)


État 10

   17 listVars: ID . listBisVars
   18 listBisVars: . %empty  [PV]
   19            | . SEPAR listVars
   24 listDeclarationVar: TYPE ID . PV $@4 listDeclarationVar
   28 listDeclarationFunct: TYPE ID . LPAR listArgs RPAR PV
   62 expression: ID .  [EQ, INFS, INFE, ET, OR, SEPAR, PV, ADD, MOINS, MULT, SUPS, SUPE]
   63           | ID . LPAR listp RPAR

    SEPAR  décalage et aller à l'état 20
    PV     décalage et aller à l'état 21
    LPAR   décalage et aller à l'état 22

    SEPAR     [réduction par utilisation de la règle 62 (expression)]
    PV        [réduction par utilisation de la règle 18 (listBisVars)]
    PV        [réduction par utilisation de la règle 62 (expression)]
    $défaut  réduction par utilisation de la règle 62 (expression)

    listBisVars  aller à l'état 23


État 11

   55 main: TYPE MAIN . LPAR RPAR $@12 bloc $@13 fonctions

    LPAR  décalage et aller à l'état 24


État 12

   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   64           | LPAR . expression RPAR
   65           | . '!' expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    expression  aller à l'état 26


État 13

   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression
   65           | '!' . expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    expression  aller à l'état 27


État 14

   21 listVars: list .

    $défaut  réduction par utilisation de la règle 21 (listVars)


État 15

   25 listDeclarationVar: TYPE listVars . PV listDeclarationVar

    PV  décalage et aller à l'état 28


État 16

    1 $@1: . %empty  [SEPAR, PV, RPAR]
    2 list: expression . $@1 listBis
   60 expression: expression . expressionBis
   66 expressionBis: . ADD expression
   67              | . MOINS expression
   68              | . MULT expression
   69              | . EQ expression
   70              | . INFS expression
   71              | . INFE expression
   72              | . SUPE expression
   73              | . SUPS expression
   74              | . ET expression
   75              | . OR expression

    EQ     décalage et aller à l'état 29
    INFS   décalage et aller à l'état 30
    INFE   décalage et aller à l'état 31
    ET     décalage et aller à l'état 32
    OR     décalage et aller à l'état 33
    ADD    décalage et aller à l'état 34
    MOINS  décalage et aller à l'état 35
    MULT   décalage et aller à l'état 36
    SUPS   décalage et aller à l'état 37
    SUPE   décalage et aller à l'état 38

    $défaut  réduction par utilisation de la règle 1 ($@1)

    $@1            aller à l'état 39
    expressionBis  aller à l'état 40


État 17

   28 listDeclarationFunct: TYPE . ID LPAR listArgs RPAR PV
   55 main: TYPE . MAIN LPAR RPAR $@12 bloc $@13 fonctions

    ID    décalage et aller à l'état 41
    MAIN  décalage et aller à l'état 11


État 18

   27 listDecFunct: listDeclarationFunct listDecFunct .

    $défaut  réduction par utilisation de la règle 27 (listDecFunct)


État 19

    0 $accept: programme $end .

    $défaut  accepter


État 20

    2 list: . expression $@1 listBis
   17 listVars: . ID listBisVars
   19 listBisVars: SEPAR . listVars
   20 listVars: . %empty  [PV]
   21         | . list
   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 42
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    $défaut  réduction par utilisation de la règle 20 (listVars)

    list        aller à l'état 14
    listVars    aller à l'état 43
    expression  aller à l'état 16


État 21

   23 $@4: . %empty
   24 listDeclarationVar: TYPE ID PV . $@4 listDeclarationVar

    $défaut  réduction par utilisation de la règle 23 ($@4)

    $@4  aller à l'état 44


État 22

    2 list: . expression $@1 listBis
    5 listp: . %empty  [RPAR]
    6      | . list
    7 listArgs: . VOID
    8         | . listTmp
    9 listTmp: . TYPE ID
   10        | . TYPE ID SEPAR listTmp
   28 listDeclarationFunct: TYPE ID LPAR . listArgs RPAR PV
   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   63           | ID LPAR . listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    TYPE  décalage et aller à l'état 45
    LPAR  décalage et aller à l'état 12
    VOID  décalage et aller à l'état 46
    '!'   décalage et aller à l'état 13

    $défaut  réduction par utilisation de la règle 5 (listp)

    list        aller à l'état 47
    listp       aller à l'état 48
    listArgs    aller à l'état 49
    listTmp     aller à l'état 50
    expression  aller à l'état 16


État 23

   17 listVars: ID listBisVars .

    $défaut  réduction par utilisation de la règle 17 (listVars)


État 24

   55 main: TYPE MAIN LPAR . RPAR $@12 bloc $@13 fonctions

    RPAR  décalage et aller à l'état 51


État 25

   62 expression: ID .  [EQ, INFS, INFE, ET, OR, SEPAR, PV, ADD, MOINS, MULT, RPAR, SUPS, SUPE]
   63           | ID . LPAR listp RPAR

    LPAR  décalage et aller à l'état 52

    $défaut  réduction par utilisation de la règle 62 (expression)


État 26

   60 expression: expression . expressionBis
   64           | LPAR expression . RPAR
   66 expressionBis: . ADD expression
   67              | . MOINS expression
   68              | . MULT expression
   69              | . EQ expression
   70              | . INFS expression
   71              | . INFE expression
   72              | . SUPE expression
   73              | . SUPS expression
   74              | . ET expression
   75              | . OR expression

    EQ     décalage et aller à l'état 29
    INFS   décalage et aller à l'état 30
    INFE   décalage et aller à l'état 31
    ET     décalage et aller à l'état 32
    OR     décalage et aller à l'état 33
    ADD    décalage et aller à l'état 34
    MOINS  décalage et aller à l'état 35
    MULT   décalage et aller à l'état 36
    RPAR   décalage et aller à l'état 53
    SUPS   décalage et aller à l'état 37
    SUPE   décalage et aller à l'état 38

    expressionBis  aller à l'état 40


État 27

   60 expression: expression . expressionBis
   65           | '!' expression .  [EQ, INFS, INFE, ET, OR, SEPAR, PV, ADD, MOINS, MULT, RPAR, SUPS, SUPE]
   66 expressionBis: . ADD expression
   67              | . MOINS expression
   68              | . MULT expression
   69              | . EQ expression
   70              | . INFS expression
   71              | . INFE expression
   72              | . SUPE expression
   73              | . SUPS expression
   74              | . ET expression
   75              | . OR expression

    EQ     décalage et aller à l'état 29
    INFS   décalage et aller à l'état 30
    INFE   décalage et aller à l'état 31
    ET     décalage et aller à l'état 32
    OR     décalage et aller à l'état 33
    ADD    décalage et aller à l'état 34
    MOINS  décalage et aller à l'état 35
    MULT   décalage et aller à l'état 36
    SUPS   décalage et aller à l'état 37
    SUPE   décalage et aller à l'état 38

    EQ        [réduction par utilisation de la règle 65 (expression)]
    INFS      [réduction par utilisation de la règle 65 (expression)]
    INFE      [réduction par utilisation de la règle 65 (expression)]
    ET        [réduction par utilisation de la règle 65 (expression)]
    OR        [réduction par utilisation de la règle 65 (expression)]
    ADD       [réduction par utilisation de la règle 65 (expression)]
    MOINS     [réduction par utilisation de la règle 65 (expression)]
    MULT      [réduction par utilisation de la règle 65 (expression)]
    SUPS      [réduction par utilisation de la règle 65 (expression)]
    SUPE      [réduction par utilisation de la règle 65 (expression)]
    $défaut  réduction par utilisation de la règle 65 (expression)

    expressionBis  aller à l'état 40


État 28

   22 listDeclarationVar: . suiteFunct
   24                   | . TYPE ID PV $@4 listDeclarationVar
   25                   | . TYPE listVars PV listDeclarationVar
   25                   | TYPE listVars PV . listDeclarationVar
   26 listDecFunct: . suiteMain
   27             | . listDeclarationFunct listDecFunct
   28 listDeclarationFunct: . TYPE ID LPAR listArgs RPAR PV
   29 suiteMain: . main
   30 suiteFunct: . listDecFunct
   55 main: . TYPE MAIN LPAR RPAR $@12 bloc $@13 fonctions

    TYPE  décalage et aller à l'état 1

    listDeclarationVar    aller à l'état 54
    listDecFunct          aller à l'état 3
    listDeclarationFunct  aller à l'état 4
    suiteMain             aller à l'état 5
    suiteFunct            aller à l'état 6
    main                  aller à l'état 8


État 29

   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression
   69 expressionBis: EQ . expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    expression  aller à l'état 55


État 30

   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression
   70 expressionBis: INFS . expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    expression  aller à l'état 56


État 31

   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression
   71 expressionBis: INFE . expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    expression  aller à l'état 57


État 32

   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression
   74 expressionBis: ET . expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    expression  aller à l'état 58


État 33

   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression
   75 expressionBis: OR . expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    expression  aller à l'état 59


État 34

   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression
   66 expressionBis: ADD . expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    expression  aller à l'état 60


État 35

   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression
   67 expressionBis: MOINS . expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    expression  aller à l'état 61


État 36

   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression
   68 expressionBis: MULT . expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    expression  aller à l'état 62


État 37

   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression
   73 expressionBis: SUPS . expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    expression  aller à l'état 63


État 38

   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression
   72 expressionBis: SUPE . expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    expression  aller à l'état 64


État 39

    2 list: expression $@1 . listBis
    3 listBis: . %empty  [PV, RPAR]
    4        | . SEPAR list

    SEPAR  décalage et aller à l'état 65

    $défaut  réduction par utilisation de la règle 3 (listBis)

    listBis  aller à l'état 66


État 40

   60 expression: expression expressionBis .

    $défaut  réduction par utilisation de la règle 60 (expression)


État 41

   28 listDeclarationFunct: TYPE ID . LPAR listArgs RPAR PV

    LPAR  décalage et aller à l'état 67


État 42

   17 listVars: ID . listBisVars
   18 listBisVars: . %empty  [PV]
   19            | . SEPAR listVars
   62 expression: ID .  [EQ, INFS, INFE, ET, OR, SEPAR, PV, ADD, MOINS, MULT, SUPS, SUPE]
   63           | ID . LPAR listp RPAR

    SEPAR  décalage et aller à l'état 20
    LPAR   décalage et aller à l'état 52

    SEPAR     [réduction par utilisation de la règle 62 (expression)]
    PV        réduction par utilisation de la règle 18 (listBisVars)
    PV        [réduction par utilisation de la règle 62 (expression)]
    $défaut  réduction par utilisation de la règle 62 (expression)

    listBisVars  aller à l'état 23


État 43

   19 listBisVars: SEPAR listVars .

    $défaut  réduction par utilisation de la règle 19 (listBisVars)


État 44

   22 listDeclarationVar: . suiteFunct
   24                   | . TYPE ID PV $@4 listDeclarationVar
   24                   | TYPE ID PV $@4 . listDeclarationVar
   25                   | . TYPE listVars PV listDeclarationVar
   26 listDecFunct: . suiteMain
   27             | . listDeclarationFunct listDecFunct
   28 listDeclarationFunct: . TYPE ID LPAR listArgs RPAR PV
   29 suiteMain: . main
   30 suiteFunct: . listDecFunct
   55 main: . TYPE MAIN LPAR RPAR $@12 bloc $@13 fonctions

    TYPE  décalage et aller à l'état 1

    listDeclarationVar    aller à l'état 68
    listDecFunct          aller à l'état 3
    listDeclarationFunct  aller à l'état 4
    suiteMain             aller à l'état 5
    suiteFunct            aller à l'état 6
    main                  aller à l'état 8


État 45

    9 listTmp: TYPE . ID
   10        | TYPE . ID SEPAR listTmp

    ID  décalage et aller à l'état 69


État 46

    7 listArgs: VOID .

    $défaut  réduction par utilisation de la règle 7 (listArgs)


État 47

    6 listp: list .

    $défaut  réduction par utilisation de la règle 6 (listp)


État 48

   63 expression: ID LPAR listp . RPAR

    RPAR  décalage et aller à l'état 70


État 49

   28 listDeclarationFunct: TYPE ID LPAR listArgs . RPAR PV

    RPAR  décalage et aller à l'état 71


État 50

    8 listArgs: listTmp .

    $défaut  réduction par utilisation de la règle 8 (listArgs)


État 51

   53 $@12: . %empty
   55 main: TYPE MAIN LPAR RPAR . $@12 bloc $@13 fonctions

    $défaut  réduction par utilisation de la règle 53 ($@12)

    $@12  aller à l'état 72


État 52

    2 list: . expression $@1 listBis
    5 listp: . %empty  [RPAR]
    6      | . list
   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   63           | ID LPAR . listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    $défaut  réduction par utilisation de la règle 5 (listp)

    list        aller à l'état 47
    listp       aller à l'état 48
    expression  aller à l'état 16


État 53

   64 expression: LPAR expression RPAR .

    $défaut  réduction par utilisation de la règle 64 (expression)


État 54

   25 listDeclarationVar: TYPE listVars PV listDeclarationVar .

    $défaut  réduction par utilisation de la règle 25 (listDeclarationVar)


État 55

   60 expression: expression . expressionBis
   66 expressionBis: . ADD expression
   67              | . MOINS expression
   68              | . MULT expression
   69              | . EQ expression
   69              | EQ expression .  [EQ, INFS, INFE, ET, OR, SEPAR, PV, ADD, MOINS, MULT, RPAR, SUPS, SUPE]
   70              | . INFS expression
   71              | . INFE expression
   72              | . SUPE expression
   73              | . SUPS expression
   74              | . ET expression
   75              | . OR expression

    EQ     décalage et aller à l'état 29
    INFS   décalage et aller à l'état 30
    INFE   décalage et aller à l'état 31
    ET     décalage et aller à l'état 32
    OR     décalage et aller à l'état 33
    ADD    décalage et aller à l'état 34
    MOINS  décalage et aller à l'état 35
    MULT   décalage et aller à l'état 36
    SUPS   décalage et aller à l'état 37
    SUPE   décalage et aller à l'état 38

    EQ        [réduction par utilisation de la règle 69 (expressionBis)]
    INFS      [réduction par utilisation de la règle 69 (expressionBis)]
    INFE      [réduction par utilisation de la règle 69 (expressionBis)]
    ET        [réduction par utilisation de la règle 69 (expressionBis)]
    OR        [réduction par utilisation de la règle 69 (expressionBis)]
    ADD       [réduction par utilisation de la règle 69 (expressionBis)]
    MOINS     [réduction par utilisation de la règle 69 (expressionBis)]
    MULT      [réduction par utilisation de la règle 69 (expressionBis)]
    SUPS      [réduction par utilisation de la règle 69 (expressionBis)]
    SUPE      [réduction par utilisation de la règle 69 (expressionBis)]
    $défaut  réduction par utilisation de la règle 69 (expressionBis)

    expressionBis  aller à l'état 40


État 56

   60 expression: expression . expressionBis
   66 expressionBis: . ADD expression
   67              | . MOINS expression
   68              | . MULT expression
   69              | . EQ expression
   70              | . INFS expression
   70              | INFS expression .  [EQ, INFS, INFE, ET, OR, SEPAR, PV, ADD, MOINS, MULT, RPAR, SUPS, SUPE]
   71              | . INFE expression
   72              | . SUPE expression
   73              | . SUPS expression
   74              | . ET expression
   75              | . OR expression

    EQ     décalage et aller à l'état 29
    INFS   décalage et aller à l'état 30
    INFE   décalage et aller à l'état 31
    ET     décalage et aller à l'état 32
    OR     décalage et aller à l'état 33
    ADD    décalage et aller à l'état 34
    MOINS  décalage et aller à l'état 35
    MULT   décalage et aller à l'état 36
    SUPS   décalage et aller à l'état 37
    SUPE   décalage et aller à l'état 38

    EQ        [réduction par utilisation de la règle 70 (expressionBis)]
    INFS      [réduction par utilisation de la règle 70 (expressionBis)]
    INFE      [réduction par utilisation de la règle 70 (expressionBis)]
    ET        [réduction par utilisation de la règle 70 (expressionBis)]
    OR        [réduction par utilisation de la règle 70 (expressionBis)]
    ADD       [réduction par utilisation de la règle 70 (expressionBis)]
    MOINS     [réduction par utilisation de la règle 70 (expressionBis)]
    MULT      [réduction par utilisation de la règle 70 (expressionBis)]
    SUPS      [réduction par utilisation de la règle 70 (expressionBis)]
    SUPE      [réduction par utilisation de la règle 70 (expressionBis)]
    $défaut  réduction par utilisation de la règle 70 (expressionBis)

    expressionBis  aller à l'état 40


État 57

   60 expression: expression . expressionBis
   66 expressionBis: . ADD expression
   67              | . MOINS expression
   68              | . MULT expression
   69              | . EQ expression
   70              | . INFS expression
   71              | . INFE expression
   71              | INFE expression .  [EQ, INFS, INFE, ET, OR, SEPAR, PV, ADD, MOINS, MULT, RPAR, SUPS, SUPE]
   72              | . SUPE expression
   73              | . SUPS expression
   74              | . ET expression
   75              | . OR expression

    EQ     décalage et aller à l'état 29
    INFS   décalage et aller à l'état 30
    INFE   décalage et aller à l'état 31
    ET     décalage et aller à l'état 32
    OR     décalage et aller à l'état 33
    ADD    décalage et aller à l'état 34
    MOINS  décalage et aller à l'état 35
    MULT   décalage et aller à l'état 36
    SUPS   décalage et aller à l'état 37
    SUPE   décalage et aller à l'état 38

    EQ        [réduction par utilisation de la règle 71 (expressionBis)]
    INFS      [réduction par utilisation de la règle 71 (expressionBis)]
    INFE      [réduction par utilisation de la règle 71 (expressionBis)]
    ET        [réduction par utilisation de la règle 71 (expressionBis)]
    OR        [réduction par utilisation de la règle 71 (expressionBis)]
    ADD       [réduction par utilisation de la règle 71 (expressionBis)]
    MOINS     [réduction par utilisation de la règle 71 (expressionBis)]
    MULT      [réduction par utilisation de la règle 71 (expressionBis)]
    SUPS      [réduction par utilisation de la règle 71 (expressionBis)]
    SUPE      [réduction par utilisation de la règle 71 (expressionBis)]
    $défaut  réduction par utilisation de la règle 71 (expressionBis)

    expressionBis  aller à l'état 40


État 58

   60 expression: expression . expressionBis
   66 expressionBis: . ADD expression
   67              | . MOINS expression
   68              | . MULT expression
   69              | . EQ expression
   70              | . INFS expression
   71              | . INFE expression
   72              | . SUPE expression
   73              | . SUPS expression
   74              | . ET expression
   74              | ET expression .  [EQ, INFS, INFE, ET, OR, SEPAR, PV, ADD, MOINS, MULT, RPAR, SUPS, SUPE]
   75              | . OR expression

    EQ     décalage et aller à l'état 29
    INFS   décalage et aller à l'état 30
    INFE   décalage et aller à l'état 31
    ET     décalage et aller à l'état 32
    OR     décalage et aller à l'état 33
    ADD    décalage et aller à l'état 34
    MOINS  décalage et aller à l'état 35
    MULT   décalage et aller à l'état 36
    SUPS   décalage et aller à l'état 37
    SUPE   décalage et aller à l'état 38

    EQ        [réduction par utilisation de la règle 74 (expressionBis)]
    INFS      [réduction par utilisation de la règle 74 (expressionBis)]
    INFE      [réduction par utilisation de la règle 74 (expressionBis)]
    ET        [réduction par utilisation de la règle 74 (expressionBis)]
    OR        [réduction par utilisation de la règle 74 (expressionBis)]
    ADD       [réduction par utilisation de la règle 74 (expressionBis)]
    MOINS     [réduction par utilisation de la règle 74 (expressionBis)]
    MULT      [réduction par utilisation de la règle 74 (expressionBis)]
    SUPS      [réduction par utilisation de la règle 74 (expressionBis)]
    SUPE      [réduction par utilisation de la règle 74 (expressionBis)]
    $défaut  réduction par utilisation de la règle 74 (expressionBis)

    expressionBis  aller à l'état 40


État 59

   60 expression: expression . expressionBis
   66 expressionBis: . ADD expression
   67              | . MOINS expression
   68              | . MULT expression
   69              | . EQ expression
   70              | . INFS expression
   71              | . INFE expression
   72              | . SUPE expression
   73              | . SUPS expression
   74              | . ET expression
   75              | . OR expression
   75              | OR expression .  [EQ, INFS, INFE, ET, OR, SEPAR, PV, ADD, MOINS, MULT, RPAR, SUPS, SUPE]

    EQ     décalage et aller à l'état 29
    INFS   décalage et aller à l'état 30
    INFE   décalage et aller à l'état 31
    ET     décalage et aller à l'état 32
    OR     décalage et aller à l'état 33
    ADD    décalage et aller à l'état 34
    MOINS  décalage et aller à l'état 35
    MULT   décalage et aller à l'état 36
    SUPS   décalage et aller à l'état 37
    SUPE   décalage et aller à l'état 38

    EQ        [réduction par utilisation de la règle 75 (expressionBis)]
    INFS      [réduction par utilisation de la règle 75 (expressionBis)]
    INFE      [réduction par utilisation de la règle 75 (expressionBis)]
    ET        [réduction par utilisation de la règle 75 (expressionBis)]
    OR        [réduction par utilisation de la règle 75 (expressionBis)]
    ADD       [réduction par utilisation de la règle 75 (expressionBis)]
    MOINS     [réduction par utilisation de la règle 75 (expressionBis)]
    MULT      [réduction par utilisation de la règle 75 (expressionBis)]
    SUPS      [réduction par utilisation de la règle 75 (expressionBis)]
    SUPE      [réduction par utilisation de la règle 75 (expressionBis)]
    $défaut  réduction par utilisation de la règle 75 (expressionBis)

    expressionBis  aller à l'état 40


État 60

   60 expression: expression . expressionBis
   66 expressionBis: . ADD expression
   66              | ADD expression .  [EQ, INFS, INFE, ET, OR, SEPAR, PV, ADD, MOINS, MULT, RPAR, SUPS, SUPE]
   67              | . MOINS expression
   68              | . MULT expression
   69              | . EQ expression
   70              | . INFS expression
   71              | . INFE expression
   72              | . SUPE expression
   73              | . SUPS expression
   74              | . ET expression
   75              | . OR expression

    EQ    décalage et aller à l'état 29
    INFS  décalage et aller à l'état 30
    INFE  décalage et aller à l'état 31
    ET    décalage et aller à l'état 32
    OR    décalage et aller à l'état 33
    MULT  décalage et aller à l'état 36
    SUPS  décalage et aller à l'état 37
    SUPE  décalage et aller à l'état 38

    EQ        [réduction par utilisation de la règle 66 (expressionBis)]
    INFS      [réduction par utilisation de la règle 66 (expressionBis)]
    INFE      [réduction par utilisation de la règle 66 (expressionBis)]
    ET        [réduction par utilisation de la règle 66 (expressionBis)]
    OR        [réduction par utilisation de la règle 66 (expressionBis)]
    MULT      [réduction par utilisation de la règle 66 (expressionBis)]
    SUPS      [réduction par utilisation de la règle 66 (expressionBis)]
    SUPE      [réduction par utilisation de la règle 66 (expressionBis)]
    $défaut  réduction par utilisation de la règle 66 (expressionBis)

    expressionBis  aller à l'état 40

    Conflit entre la règle 66 et le jeton ADD résolu par réduction (%left ADD).
    Conflit entre la règle 66 et le jeton MOINS résolu par réduction (%left MOINS).


État 61

   60 expression: expression . expressionBis
   66 expressionBis: . ADD expression
   67              | . MOINS expression
   67              | MOINS expression .  [EQ, INFS, INFE, ET, OR, SEPAR, PV, ADD, MOINS, MULT, RPAR, SUPS, SUPE]
   68              | . MULT expression
   69              | . EQ expression
   70              | . INFS expression
   71              | . INFE expression
   72              | . SUPE expression
   73              | . SUPS expression
   74              | . ET expression
   75              | . OR expression

    EQ    décalage et aller à l'état 29
    INFS  décalage et aller à l'état 30
    INFE  décalage et aller à l'état 31
    ET    décalage et aller à l'état 32
    OR    décalage et aller à l'état 33
    MULT  décalage et aller à l'état 36
    SUPS  décalage et aller à l'état 37
    SUPE  décalage et aller à l'état 38

    EQ        [réduction par utilisation de la règle 67 (expressionBis)]
    INFS      [réduction par utilisation de la règle 67 (expressionBis)]
    INFE      [réduction par utilisation de la règle 67 (expressionBis)]
    ET        [réduction par utilisation de la règle 67 (expressionBis)]
    OR        [réduction par utilisation de la règle 67 (expressionBis)]
    MULT      [réduction par utilisation de la règle 67 (expressionBis)]
    SUPS      [réduction par utilisation de la règle 67 (expressionBis)]
    SUPE      [réduction par utilisation de la règle 67 (expressionBis)]
    $défaut  réduction par utilisation de la règle 67 (expressionBis)

    expressionBis  aller à l'état 40

    Conflit entre la règle 67 et le jeton ADD résolu par réduction (%left ADD).
    Conflit entre la règle 67 et le jeton MOINS résolu par réduction (%left MOINS).


État 62

   60 expression: expression . expressionBis
   66 expressionBis: . ADD expression
   67              | . MOINS expression
   68              | . MULT expression
   68              | MULT expression .  [EQ, INFS, INFE, ET, OR, SEPAR, PV, ADD, MOINS, MULT, RPAR, SUPS, SUPE]
   69              | . EQ expression
   70              | . INFS expression
   71              | . INFE expression
   72              | . SUPE expression
   73              | . SUPS expression
   74              | . ET expression
   75              | . OR expression

    EQ     décalage et aller à l'état 29
    INFS   décalage et aller à l'état 30
    INFE   décalage et aller à l'état 31
    ET     décalage et aller à l'état 32
    OR     décalage et aller à l'état 33
    ADD    décalage et aller à l'état 34
    MOINS  décalage et aller à l'état 35
    MULT   décalage et aller à l'état 36
    SUPS   décalage et aller à l'état 37
    SUPE   décalage et aller à l'état 38

    EQ        [réduction par utilisation de la règle 68 (expressionBis)]
    INFS      [réduction par utilisation de la règle 68 (expressionBis)]
    INFE      [réduction par utilisation de la règle 68 (expressionBis)]
    ET        [réduction par utilisation de la règle 68 (expressionBis)]
    OR        [réduction par utilisation de la règle 68 (expressionBis)]
    ADD       [réduction par utilisation de la règle 68 (expressionBis)]
    MOINS     [réduction par utilisation de la règle 68 (expressionBis)]
    MULT      [réduction par utilisation de la règle 68 (expressionBis)]
    SUPS      [réduction par utilisation de la règle 68 (expressionBis)]
    SUPE      [réduction par utilisation de la règle 68 (expressionBis)]
    $défaut  réduction par utilisation de la règle 68 (expressionBis)

    expressionBis  aller à l'état 40


État 63

   60 expression: expression . expressionBis
   66 expressionBis: . ADD expression
   67              | . MOINS expression
   68              | . MULT expression
   69              | . EQ expression
   70              | . INFS expression
   71              | . INFE expression
   72              | . SUPE expression
   73              | . SUPS expression
   73              | SUPS expression .  [EQ, INFS, INFE, ET, OR, SEPAR, PV, ADD, MOINS, MULT, RPAR, SUPS, SUPE]
   74              | . ET expression
   75              | . OR expression

    EQ     décalage et aller à l'état 29
    INFS   décalage et aller à l'état 30
    INFE   décalage et aller à l'état 31
    ET     décalage et aller à l'état 32
    OR     décalage et aller à l'état 33
    ADD    décalage et aller à l'état 34
    MOINS  décalage et aller à l'état 35
    MULT   décalage et aller à l'état 36
    SUPS   décalage et aller à l'état 37
    SUPE   décalage et aller à l'état 38

    EQ        [réduction par utilisation de la règle 73 (expressionBis)]
    INFS      [réduction par utilisation de la règle 73 (expressionBis)]
    INFE      [réduction par utilisation de la règle 73 (expressionBis)]
    ET        [réduction par utilisation de la règle 73 (expressionBis)]
    OR        [réduction par utilisation de la règle 73 (expressionBis)]
    ADD       [réduction par utilisation de la règle 73 (expressionBis)]
    MOINS     [réduction par utilisation de la règle 73 (expressionBis)]
    MULT      [réduction par utilisation de la règle 73 (expressionBis)]
    SUPS      [réduction par utilisation de la règle 73 (expressionBis)]
    SUPE      [réduction par utilisation de la règle 73 (expressionBis)]
    $défaut  réduction par utilisation de la règle 73 (expressionBis)

    expressionBis  aller à l'état 40


État 64

   60 expression: expression . expressionBis
   66 expressionBis: . ADD expression
   67              | . MOINS expression
   68              | . MULT expression
   69              | . EQ expression
   70              | . INFS expression
   71              | . INFE expression
   72              | . SUPE expression
   72              | SUPE expression .  [EQ, INFS, INFE, ET, OR, SEPAR, PV, ADD, MOINS, MULT, RPAR, SUPS, SUPE]
   73              | . SUPS expression
   74              | . ET expression
   75              | . OR expression

    EQ     décalage et aller à l'état 29
    INFS   décalage et aller à l'état 30
    INFE   décalage et aller à l'état 31
    ET     décalage et aller à l'état 32
    OR     décalage et aller à l'état 33
    ADD    décalage et aller à l'état 34
    MOINS  décalage et aller à l'état 35
    MULT   décalage et aller à l'état 36
    SUPS   décalage et aller à l'état 37
    SUPE   décalage et aller à l'état 38

    EQ        [réduction par utilisation de la règle 72 (expressionBis)]
    INFS      [réduction par utilisation de la règle 72 (expressionBis)]
    INFE      [réduction par utilisation de la règle 72 (expressionBis)]
    ET        [réduction par utilisation de la règle 72 (expressionBis)]
    OR        [réduction par utilisation de la règle 72 (expressionBis)]
    ADD       [réduction par utilisation de la règle 72 (expressionBis)]
    MOINS     [réduction par utilisation de la règle 72 (expressionBis)]
    MULT      [réduction par utilisation de la règle 72 (expressionBis)]
    SUPS      [réduction par utilisation de la règle 72 (expressionBis)]
    SUPE      [réduction par utilisation de la règle 72 (expressionBis)]
    $défaut  réduction par utilisation de la règle 72 (expressionBis)

    expressionBis  aller à l'état 40


État 65

    2 list: . expression $@1 listBis
    4 listBis: SEPAR . list
   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    list        aller à l'état 73
    expression  aller à l'état 16


État 66

    2 list: expression $@1 listBis .

    $défaut  réduction par utilisation de la règle 2 (list)


État 67

    7 listArgs: . VOID
    8         | . listTmp
    9 listTmp: . TYPE ID
   10        | . TYPE ID SEPAR listTmp
   28 listDeclarationFunct: TYPE ID LPAR . listArgs RPAR PV

    TYPE  décalage et aller à l'état 45
    VOID  décalage et aller à l'état 46

    listArgs  aller à l'état 49
    listTmp   aller à l'état 50


État 68

   24 listDeclarationVar: TYPE ID PV $@4 listDeclarationVar .

    $défaut  réduction par utilisation de la règle 24 (listDeclarationVar)


État 69

    9 listTmp: TYPE ID .  [RPAR]
   10        | TYPE ID . SEPAR listTmp

    SEPAR  décalage et aller à l'état 74

    $défaut  réduction par utilisation de la règle 9 (listTmp)


État 70

   63 expression: ID LPAR listp RPAR .

    $défaut  réduction par utilisation de la règle 63 (expression)


État 71

   28 listDeclarationFunct: TYPE ID LPAR listArgs RPAR . PV

    PV  décalage et aller à l'état 75


État 72

   48 bloc: . ACO $@10 instructions ACF
   55 main: TYPE MAIN LPAR RPAR $@12 . bloc $@13 fonctions

    ACO  décalage et aller à l'état 76

    bloc  aller à l'état 77


État 73

    4 listBis: SEPAR list .

    $défaut  réduction par utilisation de la règle 4 (listBis)


État 74

    9 listTmp: . TYPE ID
   10        | . TYPE ID SEPAR listTmp
   10        | TYPE ID SEPAR . listTmp

    TYPE  décalage et aller à l'état 45

    listTmp  aller à l'état 78


État 75

   28 listDeclarationFunct: TYPE ID LPAR listArgs RPAR PV .

    $défaut  réduction par utilisation de la règle 28 (listDeclarationFunct)


État 76

   47 $@10: . %empty
   48 bloc: ACO . $@10 instructions ACF

    $défaut  réduction par utilisation de la règle 47 ($@10)

    $@10  aller à l'état 79


État 77

   54 $@13: . %empty
   55 main: TYPE MAIN LPAR RPAR $@12 bloc . $@13 fonctions

    $défaut  réduction par utilisation de la règle 54 ($@13)

    $@13  aller à l'état 80


État 78

   10 listTmp: TYPE ID SEPAR listTmp .

    $défaut  réduction par utilisation de la règle 10 (listTmp)


État 79

   31 instructions: . %empty  [ACF]
   32             | . TYPE listVars PV instructions
   34             | . TYPE ID PV $@5 instructions
   36             | . ID LPAR listp RPAR PV $@6 instructions
   38             | . ID AFF expression PV $@7 instructions
   39             | . condition
   40             | . while
   41             | . retour
   42 while: . WHILE LPAR expression RPAR bloc instructions
   44 condition: . IF LPAR expression RPAR bloc $@8 instructions
   46          | . IF LPAR expression RPAR bloc $@9 ELSE bloc instructions
   48 bloc: ACO $@10 . instructions ACF
   51 retour: . RETURN expression PV instructions

    ID      décalage et aller à l'état 81
    TYPE    décalage et aller à l'état 82
    IF      décalage et aller à l'état 83
    WHILE   décalage et aller à l'état 84
    RETURN  décalage et aller à l'état 85

    $défaut  réduction par utilisation de la règle 31 (instructions)

    instructions  aller à l'état 86
    while         aller à l'état 87
    condition     aller à l'état 88
    retour        aller à l'état 89


État 80

   55 main: TYPE MAIN LPAR RPAR $@12 bloc $@13 . fonctions
   56 fonctions: . %empty  [$end]
   59          | . TYPE ID LPAR $@14 listArgsDef RPAR $@15 blocFunct fonctions

    TYPE  décalage et aller à l'état 90

    $défaut  réduction par utilisation de la règle 56 (fonctions)

    fonctions  aller à l'état 91


État 81

   36 instructions: ID . LPAR listp RPAR PV $@6 instructions
   38             | ID . AFF expression PV $@7 instructions

    AFF   décalage et aller à l'état 92
    LPAR  décalage et aller à l'état 93


État 82

    2 list: . expression $@1 listBis
   17 listVars: . ID listBisVars
   20         | . %empty  [PV]
   21         | . list
   32 instructions: TYPE . listVars PV instructions
   34             | TYPE . ID PV $@5 instructions
   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 94
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    $défaut  réduction par utilisation de la règle 20 (listVars)

    list        aller à l'état 14
    listVars    aller à l'état 95
    expression  aller à l'état 16


État 83

   44 condition: IF . LPAR expression RPAR bloc $@8 instructions
   46          | IF . LPAR expression RPAR bloc $@9 ELSE bloc instructions

    LPAR  décalage et aller à l'état 96


État 84

   42 while: WHILE . LPAR expression RPAR bloc instructions

    LPAR  décalage et aller à l'état 97


État 85

   51 retour: RETURN . expression PV instructions
   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    expression  aller à l'état 98


État 86

   48 bloc: ACO $@10 instructions . ACF

    ACF  décalage et aller à l'état 99


État 87

   40 instructions: while .

    $défaut  réduction par utilisation de la règle 40 (instructions)


État 88

   39 instructions: condition .

    $défaut  réduction par utilisation de la règle 39 (instructions)


État 89

   41 instructions: retour .

    $défaut  réduction par utilisation de la règle 41 (instructions)


État 90

   59 fonctions: TYPE . ID LPAR $@14 listArgsDef RPAR $@15 blocFunct fonctions

    ID  décalage et aller à l'état 100


État 91

   55 main: TYPE MAIN LPAR RPAR $@12 bloc $@13 fonctions .

    $défaut  réduction par utilisation de la règle 55 (main)


État 92

   38 instructions: ID AFF . expression PV $@7 instructions
   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    expression  aller à l'état 101


État 93

    2 list: . expression $@1 listBis
    5 listp: . %empty  [RPAR]
    6      | . list
   36 instructions: ID LPAR . listp RPAR PV $@6 instructions
   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    $défaut  réduction par utilisation de la règle 5 (listp)

    list        aller à l'état 47
    listp       aller à l'état 102
    expression  aller à l'état 16


État 94

   17 listVars: ID . listBisVars
   18 listBisVars: . %empty  [PV]
   19            | . SEPAR listVars
   34 instructions: TYPE ID . PV $@5 instructions
   62 expression: ID .  [EQ, INFS, INFE, ET, OR, SEPAR, PV, ADD, MOINS, MULT, SUPS, SUPE]
   63           | ID . LPAR listp RPAR

    SEPAR  décalage et aller à l'état 20
    PV     décalage et aller à l'état 103
    LPAR   décalage et aller à l'état 52

    SEPAR     [réduction par utilisation de la règle 62 (expression)]
    PV        [réduction par utilisation de la règle 18 (listBisVars)]
    PV        [réduction par utilisation de la règle 62 (expression)]
    $défaut  réduction par utilisation de la règle 62 (expression)

    listBisVars  aller à l'état 23


État 95

   32 instructions: TYPE listVars . PV instructions

    PV  décalage et aller à l'état 104


État 96

   44 condition: IF LPAR . expression RPAR bloc $@8 instructions
   46          | IF LPAR . expression RPAR bloc $@9 ELSE bloc instructions
   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    expression  aller à l'état 105


État 97

   42 while: WHILE LPAR . expression RPAR bloc instructions
   60 expression: . expression expressionBis
   61           | . ENT
   62           | . ID
   63           | . ID LPAR listp RPAR
   64           | . LPAR expression RPAR
   65           | . '!' expression

    ENT   décalage et aller à l'état 9
    ID    décalage et aller à l'état 25
    LPAR  décalage et aller à l'état 12
    '!'   décalage et aller à l'état 13

    expression  aller à l'état 106


État 98

   51 retour: RETURN expression . PV instructions
   60 expression: expression . expressionBis
   66 expressionBis: . ADD expression
   67              | . MOINS expression
   68              | . MULT expression
   69              | . EQ expression
   70              | . INFS expression
   71              | . INFE expression
   72              | . SUPE expression
   73              | . SUPS expression
   74              | . ET expression
   75              | . OR expression

    EQ     décalage et aller à l'état 29
    INFS   décalage et aller à l'état 30
    INFE   décalage et aller à l'état 31
    ET     décalage et aller à l'état 32
    OR     décalage et aller à l'état 33
    PV     décalage et aller à l'état 107
    ADD    décalage et aller à l'état 34
    MOINS  décalage et aller à l'état 35
    MULT   décalage et aller à l'état 36
    SUPS   décalage et aller à l'état 37
    SUPE   décalage et aller à l'état 38

    expressionBis  aller à l'état 40


État 99

   48 bloc: ACO $@10 instructions ACF .

    $défaut  réduction par utilisation de la règle 48 (bloc)


État 100

   59 fonctions: TYPE ID . LPAR $@14 listArgsDef RPAR $@15 blocFunct fonctions

    LPAR  décalage et aller à l'état 108


État 101

   38 instructions: ID AFF expression . PV $@7 instructions
   60 expression: expression . expressionBis
   66 expressionBis: . ADD expression
   67              | . MOINS expression
   68              | . MULT expression
   69              | . EQ expression
   70              | . INFS expression
   71              | . INFE expression
   72              | . SUPE expression
   73              | . SUPS expression
   74              | . ET expression
   75              | . OR expression

    EQ     décalage et aller à l'état 29
    INFS   décalage et aller à l'état 30
    INFE   décalage et aller à l'état 31
    ET     décalage et aller à l'état 32
    OR     décalage et aller à l'état 33
    PV     décalage et aller à l'état 109
    ADD    décalage et aller à l'état 34
    MOINS  décalage et aller à l'état 35
    MULT   décalage et aller à l'état 36
    SUPS   décalage et aller à l'état 37
    SUPE   décalage et aller à l'état 38

    expressionBis  aller à l'état 40


État 102

   36 instructions: ID LPAR listp . RPAR PV $@6 instructions

    RPAR  décalage et aller à l'état 110


État 103

   33 $@5: . %empty
   34 instructions: TYPE ID PV . $@5 instructions

    $défaut  réduction par utilisation de la règle 33 ($@5)

    $@5  aller à l'état 111


État 104

   31 instructions: . %empty  [ACF]
   32             | . TYPE listVars PV instructions
   32             | TYPE listVars PV . instructions
   34             | . TYPE ID PV $@5 instructions
   36             | . ID LPAR listp RPAR PV $@6 instructions
   38             | . ID AFF expression PV $@7 instructions
   39             | . condition
   40             | . while
   41             | . retour
   42 while: . WHILE LPAR expression RPAR bloc instructions
   44 condition: . IF LPAR expression RPAR bloc $@8 instructions
   46          | . IF LPAR expression RPAR bloc $@9 ELSE bloc instructions
   51 retour: . RETURN expression PV instructions

    ID      décalage et aller à l'état 81
    TYPE    décalage et aller à l'état 82
    IF      décalage et aller à l'état 83
    WHILE   décalage et aller à l'état 84
    RETURN  décalage et aller à l'état 85

    $défaut  réduction par utilisation de la règle 31 (instructions)

    instructions  aller à l'état 112
    while         aller à l'état 87
    condition     aller à l'état 88
    retour        aller à l'état 89


État 105

   44 condition: IF LPAR expression . RPAR bloc $@8 instructions
   46          | IF LPAR expression . RPAR bloc $@9 ELSE bloc instructions
   60 expression: expression . expressionBis
   66 expressionBis: . ADD expression
   67              | . MOINS expression
   68              | . MULT expression
   69              | . EQ expression
   70              | . INFS expression
   71              | . INFE expression
   72              | . SUPE expression
   73              | . SUPS expression
   74              | . ET expression
   75              | . OR expression

    EQ     décalage et aller à l'état 29
    INFS   décalage et aller à l'état 30
    INFE   décalage et aller à l'état 31
    ET     décalage et aller à l'état 32
    OR     décalage et aller à l'état 33
    ADD    décalage et aller à l'état 34
    MOINS  décalage et aller à l'état 35
    MULT   décalage et aller à l'état 36
    RPAR   décalage et aller à l'état 113
    SUPS   décalage et aller à l'état 37
    SUPE   décalage et aller à l'état 38

    expressionBis  aller à l'état 40


État 106

   42 while: WHILE LPAR expression . RPAR bloc instructions
   60 expression: expression . expressionBis
   66 expressionBis: . ADD expression
   67              | . MOINS expression
   68              | . MULT expression
   69              | . EQ expression
   70              | . INFS expression
   71              | . INFE expression
   72              | . SUPE expression
   73              | . SUPS expression
   74              | . ET expression
   75              | . OR expression

    EQ     décalage et aller à l'état 29
    INFS   décalage et aller à l'état 30
    INFE   décalage et aller à l'état 31
    ET     décalage et aller à l'état 32
    OR     décalage et aller à l'état 33
    ADD    décalage et aller à l'état 34
    MOINS  décalage et aller à l'état 35
    MULT   décalage et aller à l'état 36
    RPAR   décalage et aller à l'état 114
    SUPS   décalage et aller à l'état 37
    SUPE   décalage et aller à l'état 38

    expressionBis  aller à l'état 40


État 107

   31 instructions: . %empty  [ACF]
   32             | . TYPE listVars PV instructions
   34             | . TYPE ID PV $@5 instructions
   36             | . ID LPAR listp RPAR PV $@6 instructions
   38             | . ID AFF expression PV $@7 instructions
   39             | . condition
   40             | . while
   41             | . retour
   42 while: . WHILE LPAR expression RPAR bloc instructions
   44 condition: . IF LPAR expression RPAR bloc $@8 instructions
   46          | . IF LPAR expression RPAR bloc $@9 ELSE bloc instructions
   51 retour: . RETURN expression PV instructions
   51       | RETURN expression PV . instructions

    ID      décalage et aller à l'état 81
    TYPE    décalage et aller à l'état 82
    IF      décalage et aller à l'état 83
    WHILE   décalage et aller à l'état 84
    RETURN  décalage et aller à l'état 85

    $défaut  réduction par utilisation de la règle 31 (instructions)

    instructions  aller à l'état 115
    while         aller à l'état 87
    condition     aller à l'état 88
    retour        aller à l'état 89


État 108

   57 $@14: . %empty
   59 fonctions: TYPE ID LPAR . $@14 listArgsDef RPAR $@15 blocFunct fonctions

    $défaut  réduction par utilisation de la règle 57 ($@14)

    $@14  aller à l'état 116


État 109

   37 $@7: . %empty
   38 instructions: ID AFF expression PV . $@7 instructions

    $défaut  réduction par utilisation de la règle 37 ($@7)

    $@7  aller à l'état 117


État 110

   36 instructions: ID LPAR listp RPAR . PV $@6 instructions

    PV  décalage et aller à l'état 118


État 111

   31 instructions: . %empty  [ACF]
   32             | . TYPE listVars PV instructions
   34             | . TYPE ID PV $@5 instructions
   34             | TYPE ID PV $@5 . instructions
   36             | . ID LPAR listp RPAR PV $@6 instructions
   38             | . ID AFF expression PV $@7 instructions
   39             | . condition
   40             | . while
   41             | . retour
   42 while: . WHILE LPAR expression RPAR bloc instructions
   44 condition: . IF LPAR expression RPAR bloc $@8 instructions
   46          | . IF LPAR expression RPAR bloc $@9 ELSE bloc instructions
   51 retour: . RETURN expression PV instructions

    ID      décalage et aller à l'état 81
    TYPE    décalage et aller à l'état 82
    IF      décalage et aller à l'état 83
    WHILE   décalage et aller à l'état 84
    RETURN  décalage et aller à l'état 85

    $défaut  réduction par utilisation de la règle 31 (instructions)

    instructions  aller à l'état 119
    while         aller à l'état 87
    condition     aller à l'état 88
    retour        aller à l'état 89


État 112

   32 instructions: TYPE listVars PV instructions .

    $défaut  réduction par utilisation de la règle 32 (instructions)


État 113

   44 condition: IF LPAR expression RPAR . bloc $@8 instructions
   46          | IF LPAR expression RPAR . bloc $@9 ELSE bloc instructions
   48 bloc: . ACO $@10 instructions ACF

    ACO  décalage et aller à l'état 76

    bloc  aller à l'état 120


État 114

   42 while: WHILE LPAR expression RPAR . bloc instructions
   48 bloc: . ACO $@10 instructions ACF

    ACO  décalage et aller à l'état 76

    bloc  aller à l'état 121


État 115

   51 retour: RETURN expression PV instructions .

    $défaut  réduction par utilisation de la règle 51 (retour)


État 116

   11 listArgsDef: . VOID
   12 $@2: . %empty  [TYPE]
   13 listArgsDef: . $@2 listTmpDef
   59 fonctions: TYPE ID LPAR $@14 . listArgsDef RPAR $@15 blocFunct fonctions

    VOID  décalage et aller à l'état 122

    $défaut  réduction par utilisation de la règle 12 ($@2)

    listArgsDef  aller à l'état 123
    $@2          aller à l'état 124


État 117

   31 instructions: . %empty  [ACF]
   32             | . TYPE listVars PV instructions
   34             | . TYPE ID PV $@5 instructions
   36             | . ID LPAR listp RPAR PV $@6 instructions
   38             | . ID AFF expression PV $@7 instructions
   38             | ID AFF expression PV $@7 . instructions
   39             | . condition
   40             | . while
   41             | . retour
   42 while: . WHILE LPAR expression RPAR bloc instructions
   44 condition: . IF LPAR expression RPAR bloc $@8 instructions
   46          | . IF LPAR expression RPAR bloc $@9 ELSE bloc instructions
   51 retour: . RETURN expression PV instructions

    ID      décalage et aller à l'état 81
    TYPE    décalage et aller à l'état 82
    IF      décalage et aller à l'état 83
    WHILE   décalage et aller à l'état 84
    RETURN  décalage et aller à l'état 85

    $défaut  réduction par utilisation de la règle 31 (instructions)

    instructions  aller à l'état 125
    while         aller à l'état 87
    condition     aller à l'état 88
    retour        aller à l'état 89


État 118

   35 $@6: . %empty
   36 instructions: ID LPAR listp RPAR PV . $@6 instructions

    $défaut  réduction par utilisation de la règle 35 ($@6)

    $@6  aller à l'état 126


État 119

   34 instructions: TYPE ID PV $@5 instructions .

    $défaut  réduction par utilisation de la règle 34 (instructions)


État 120

   43 $@8: . %empty  [ID, TYPE, IF, WHILE, ACF, RETURN]
   44 condition: IF LPAR expression RPAR bloc . $@8 instructions
   45 $@9: . %empty  [ELSE]
   46 condition: IF LPAR expression RPAR bloc . $@9 ELSE bloc instructions

    ELSE      réduction par utilisation de la règle 45 ($@9)
    $défaut  réduction par utilisation de la règle 43 ($@8)

    $@8  aller à l'état 127
    $@9  aller à l'état 128


État 121

   31 instructions: . %empty  [ACF]
   32             | . TYPE listVars PV instructions
   34             | . TYPE ID PV $@5 instructions
   36             | . ID LPAR listp RPAR PV $@6 instructions
   38             | . ID AFF expression PV $@7 instructions
   39             | . condition
   40             | . while
   41             | . retour
   42 while: . WHILE LPAR expression RPAR bloc instructions
   42      | WHILE LPAR expression RPAR bloc . instructions
   44 condition: . IF LPAR expression RPAR bloc $@8 instructions
   46          | . IF LPAR expression RPAR bloc $@9 ELSE bloc instructions
   51 retour: . RETURN expression PV instructions

    ID      décalage et aller à l'état 81
    TYPE    décalage et aller à l'état 82
    IF      décalage et aller à l'état 83
    WHILE   décalage et aller à l'état 84
    RETURN  décalage et aller à l'état 85

    $défaut  réduction par utilisation de la règle 31 (instructions)

    instructions  aller à l'état 129
    while         aller à l'état 87
    condition     aller à l'état 88
    retour        aller à l'état 89


État 122

   11 listArgsDef: VOID .

    $défaut  réduction par utilisation de la règle 11 (listArgsDef)


État 123

   59 fonctions: TYPE ID LPAR $@14 listArgsDef . RPAR $@15 blocFunct fonctions

    RPAR  décalage et aller à l'état 130


État 124

   13 listArgsDef: $@2 . listTmpDef
   14 listTmpDef: . TYPE ID
   16           | . TYPE ID $@3 SEPAR listTmpDef

    TYPE  décalage et aller à l'état 131

    listTmpDef  aller à l'état 132


État 125

   38 instructions: ID AFF expression PV $@7 instructions .

    $défaut  réduction par utilisation de la règle 38 (instructions)


État 126

   31 instructions: . %empty  [ACF]
   32             | . TYPE listVars PV instructions
   34             | . TYPE ID PV $@5 instructions
   36             | . ID LPAR listp RPAR PV $@6 instructions
   36             | ID LPAR listp RPAR PV $@6 . instructions
   38             | . ID AFF expression PV $@7 instructions
   39             | . condition
   40             | . while
   41             | . retour
   42 while: . WHILE LPAR expression RPAR bloc instructions
   44 condition: . IF LPAR expression RPAR bloc $@8 instructions
   46          | . IF LPAR expression RPAR bloc $@9 ELSE bloc instructions
   51 retour: . RETURN expression PV instructions

    ID      décalage et aller à l'état 81
    TYPE    décalage et aller à l'état 82
    IF      décalage et aller à l'état 83
    WHILE   décalage et aller à l'état 84
    RETURN  décalage et aller à l'état 85

    $défaut  réduction par utilisation de la règle 31 (instructions)

    instructions  aller à l'état 133
    while         aller à l'état 87
    condition     aller à l'état 88
    retour        aller à l'état 89


État 127

   31 instructions: . %empty  [ACF]
   32             | . TYPE listVars PV instructions
   34             | . TYPE ID PV $@5 instructions
   36             | . ID LPAR listp RPAR PV $@6 instructions
   38             | . ID AFF expression PV $@7 instructions
   39             | . condition
   40             | . while
   41             | . retour
   42 while: . WHILE LPAR expression RPAR bloc instructions
   44 condition: . IF LPAR expression RPAR bloc $@8 instructions
   44          | IF LPAR expression RPAR bloc $@8 . instructions
   46          | . IF LPAR expression RPAR bloc $@9 ELSE bloc instructions
   51 retour: . RETURN expression PV instructions

    ID      décalage et aller à l'état 81
    TYPE    décalage et aller à l'état 82
    IF      décalage et aller à l'état 83
    WHILE   décalage et aller à l'état 84
    RETURN  décalage et aller à l'état 85

    $défaut  réduction par utilisation de la règle 31 (instructions)

    instructions  aller à l'état 134
    while         aller à l'état 87
    condition     aller à l'état 88
    retour        aller à l'état 89


État 128

   46 condition: IF LPAR expression RPAR bloc $@9 . ELSE bloc instructions

    ELSE  décalage et aller à l'état 135


État 129

   42 while: WHILE LPAR expression RPAR bloc instructions .

    $défaut  réduction par utilisation de la règle 42 (while)


État 130

   58 $@15: . %empty
   59 fonctions: TYPE ID LPAR $@14 listArgsDef RPAR . $@15 blocFunct fonctions

    $défaut  réduction par utilisation de la règle 58 ($@15)

    $@15  aller à l'état 136


État 131

   14 listTmpDef: TYPE . ID
   16           | TYPE . ID $@3 SEPAR listTmpDef

    ID  décalage et aller à l'état 137


État 132

   13 listArgsDef: $@2 listTmpDef .

    $défaut  réduction par utilisation de la règle 13 (listArgsDef)


État 133

   36 instructions: ID LPAR listp RPAR PV $@6 instructions .

    $défaut  réduction par utilisation de la règle 36 (instructions)


État 134

   44 condition: IF LPAR expression RPAR bloc $@8 instructions .

    $défaut  réduction par utilisation de la règle 44 (condition)


État 135

   46 condition: IF LPAR expression RPAR bloc $@9 ELSE . bloc instructions
   48 bloc: . ACO $@10 instructions ACF

    ACO  décalage et aller à l'état 76

    bloc  aller à l'état 138


État 136

   50 blocFunct: . ACO $@11 instructions ACF
   59 fonctions: TYPE ID LPAR $@14 listArgsDef RPAR $@15 . blocFunct fonctions

    ACO  décalage et aller à l'état 139

    blocFunct  aller à l'état 140


État 137

   14 listTmpDef: TYPE ID .  [RPAR]
   15 $@3: . %empty  [SEPAR]
   16 listTmpDef: TYPE ID . $@3 SEPAR listTmpDef

    SEPAR     réduction par utilisation de la règle 15 ($@3)
    $défaut  réduction par utilisation de la règle 14 (listTmpDef)

    $@3  aller à l'état 141


État 138

   31 instructions: . %empty  [ACF]
   32             | . TYPE listVars PV instructions
   34             | . TYPE ID PV $@5 instructions
   36             | . ID LPAR listp RPAR PV $@6 instructions
   38             | . ID AFF expression PV $@7 instructions
   39             | . condition
   40             | . while
   41             | . retour
   42 while: . WHILE LPAR expression RPAR bloc instructions
   44 condition: . IF LPAR expression RPAR bloc $@8 instructions
   46          | . IF LPAR expression RPAR bloc $@9 ELSE bloc instructions
   46          | IF LPAR expression RPAR bloc $@9 ELSE bloc . instructions
   51 retour: . RETURN expression PV instructions

    ID      décalage et aller à l'état 81
    TYPE    décalage et aller à l'état 82
    IF      décalage et aller à l'état 83
    WHILE   décalage et aller à l'état 84
    RETURN  décalage et aller à l'état 85

    $défaut  réduction par utilisation de la règle 31 (instructions)

    instructions  aller à l'état 142
    while         aller à l'état 87
    condition     aller à l'état 88
    retour        aller à l'état 89


État 139

   49 $@11: . %empty
   50 blocFunct: ACO . $@11 instructions ACF

    $défaut  réduction par utilisation de la règle 49 ($@11)

    $@11  aller à l'état 143


État 140

   56 fonctions: . %empty  [$end]
   59          | . TYPE ID LPAR $@14 listArgsDef RPAR $@15 blocFunct fonctions
   59          | TYPE ID LPAR $@14 listArgsDef RPAR $@15 blocFunct . fonctions

    TYPE  décalage et aller à l'état 90

    $défaut  réduction par utilisation de la règle 56 (fonctions)

    fonctions  aller à l'état 144


État 141

   16 listTmpDef: TYPE ID $@3 . SEPAR listTmpDef

    SEPAR  décalage et aller à l'état 145


État 142

   46 condition: IF LPAR expression RPAR bloc $@9 ELSE bloc instructions .

    $défaut  réduction par utilisation de la règle 46 (condition)


État 143

   31 instructions: . %empty  [ACF]
   32             | . TYPE listVars PV instructions
   34             | . TYPE ID PV $@5 instructions
   36             | . ID LPAR listp RPAR PV $@6 instructions
   38             | . ID AFF expression PV $@7 instructions
   39             | . condition
   40             | . while
   41             | . retour
   42 while: . WHILE LPAR expression RPAR bloc instructions
   44 condition: . IF LPAR expression RPAR bloc $@8 instructions
   46          | . IF LPAR expression RPAR bloc $@9 ELSE bloc instructions
   50 blocFunct: ACO $@11 . instructions ACF
   51 retour: . RETURN expression PV instructions

    ID      décalage et aller à l'état 81
    TYPE    décalage et aller à l'état 82
    IF      décalage et aller à l'état 83
    WHILE   décalage et aller à l'état 84
    RETURN  décalage et aller à l'état 85

    $défaut  réduction par utilisation de la règle 31 (instructions)

    instructions  aller à l'état 146
    while         aller à l'état 87
    condition     aller à l'état 88
    retour        aller à l'état 89


État 144

   59 fonctions: TYPE ID LPAR $@14 listArgsDef RPAR $@15 blocFunct fonctions .

    $défaut  réduction par utilisation de la règle 59 (fonctions)


État 145

   14 listTmpDef: . TYPE ID
   16           | . TYPE ID $@3 SEPAR listTmpDef
   16           | TYPE ID $@3 SEPAR . listTmpDef

    TYPE  décalage et aller à l'état 131

    listTmpDef  aller à l'état 147


État 146

   50 blocFunct: ACO $@11 instructions . ACF

    ACF  décalage et aller à l'état 148


État 147

   16 listTmpDef: TYPE ID $@3 SEPAR listTmpDef .

    $défaut  réduction par utilisation de la règle 16 (listTmpDef)


État 148

   50 blocFunct: ACO $@11 instructions ACF .

    $défaut  réduction par utilisation de la règle 50 (blocFunct)
